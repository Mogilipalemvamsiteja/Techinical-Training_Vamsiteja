#include <stdio.h>

#define MAX_HEIGHT 100000

int max_height_of_equal_stacks(int stack1[], int stack2[], int stack3[], int n1, int n2, int n3) {
    int height1 = 0, height2 = 0, height3 = 0;
    for (int i = 0; i < n1; i++)
        height1 += stack1[i];
    for (int i = 0; i < n2; i++)
        height2 += stack2[i];
    for (int i = 0; i < n3; i++)
        height3 += stack3[i];
        
    int ptr1 = 0, ptr2 = 0, ptr3 = 0;

    
    for (int height = height1; height >= 0; height--) 
    {
        while (height1 > height && ptr1 < n1)
            height1 -= stack1[ptr1++];
        while (height2 > height && ptr2 < n2)
            height2 -= stack2[ptr2++];
        while (height3 > height && ptr3 < n3)
            height3 -= stack3[ptr3++];

        if (height1 == height2 && height2 == height3)
            return height;
    }

    return 0;
}

int main() {
    int stack1[] = {3, 2, 1, 1, 1};
    int stack2[] = {4, 3, 2};
    int stack3[] = {1, 1, 4, 1};
    int n1 = sizeof(stack1) / sizeof(stack1[0]);
    int n2 = sizeof(stack2) / sizeof(stack2[0]);
    int n3 = sizeof(stack3) / sizeof(stack3[0]);

    int max_height = max_height_of_equal_stacks(stack1, stack2, stack3, n1, n2, n3);
    printf("Maximum possible equal height of the stacks: %d\n", max_height);

    return 0;
}



